node.js 
express.js 

DATABASE 
  mongodb

hosting 
  vercel
  firebase

deployment
  pm2
  docker 
  cloud ci/cd pipelines

authentication 
  jwt 
  oauth 
  bcrpt.js

TYPE 
  rest 
  graphql  

libraries 
  express 
  cors
  dotenv 
  helmet 
  morgan 

  database 
    mongoose 

  auth 
    jsonwebtoken 

  deployment 
    pm2 
    nodemon 
    docker 

REST ARCHITECTURE 
  http methods: GET, POST, PUT, DELETE
    get = read 
    post = create 
    put = update 
    delete = delete 
  stateless requests (each request is independent)stateless requests (each request is independent)
  JSON or XML for data exchange
  clear URL structure (e.g., /users for retrieving users)

  response status codes 





POSTMAN for testing 




TODO APP DESCRIPTION 

add item to todo 
  meter on how much you want to do the item 

open app 
  ask a meter on how good you feel 
  show todo list based on how good you feel 

database 
  user 
    todo 
      meter 
    todo 
      meter 
    ...







/app
├── config/
│   ├── db.conf.js
│   ├── app.conf.js
│   ├── app.keys.js
│   ├── db.keys.js
│   ├── init.js
├── database/
│   ├── Redis.database.js
│   ├── Mongo.database.js
│   ├── init.js
├── routes/
│   ├── App.routes.js
│   ├── Auth.routes.js
│   ├── Dashboard.routes.js
├── utils/
│   ├── Logger.util.js
├── middleware/
│   ├── App.middleware.js
│   ├── ErrorHandler.middleware.js
│   ├── init.js
├── models/
│   ├── User.model.js
├── controllers/
│   ├── App.controller.js
│   ├── User.controller.js
├── helpers/
│   ├── App.helper.js
├── views/
│   ├── layouts/
│   ├── partials/
│   ├── support/
│   │   ├── index.ejs
│   ├── documentation/
│   │   ├── index.ejs
│   ├── index.ejs
│   ├── about.ejs
│   ├── contact.ejs
/public
├── dist/
├── images/
│   ├── dashboard/
│   ├── auth/
│   ├── documentation/      
├── sitemap.xml
/samples
├── .env.sample
├── db.conf.sample
├── app.conf.sample
├── app.keys.sample
/src
├── javascript/
├── css/
/node_modules
/server.js
/package.json
/.env